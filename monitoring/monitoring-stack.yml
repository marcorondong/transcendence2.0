services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - Transcendence2.0

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/web.yml:/etc/prometheus/web.yml
      - ./prometheus/entrypoint.sh:/entrypoint.sh
      - prometheus_data:/prometheus
    secrets:
      - prometheus_admin_password
    networks:
      - Transcendence2.0

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    restart: unless-stopped
    networks:
      - Transcendence2.0
    depends_on:
      - prometheus

  grafana:
    build:
      context: ./grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000" # TODO proxy through nginx
    networks:
      - Transcendence2.0
    depends_on:
      - prometheus
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/entrypoint.sh:/entrypoint.sh
      - ./grafana/dashboards:/etc/grafana/custom-dashboards
    secrets:
      - grafana_admin_password
      - prometheus_admin_password
    entrypoint:
      - /entrypoint.sh

volumes:
  grafana-data:
  prometheus_data:

secrets:
  grafana_admin_password:
    file: secrets/grafana_admin_password.txt
  prometheus_admin_password:
    file: secrets/prometheus_admin_password.txt