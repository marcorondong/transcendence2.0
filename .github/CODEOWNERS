# === SYNTAX === #
# file      @owner1 @owner2
# Files/Folders WITHOUT owners are PUBLIC

# === FALLBACK OWNER FOR EVERYTHING === #
# Uncomment to be auto-requested for any file not explicitly matched
# *                                @marcorondong

# === MICROSERVICES === #
# /microservices/ai/               @benszilas @ismayilguliyev28
# /microservices/auth/             @ismayilguliyev28
# /microservices/blockchain/       @sekula34
# /microservices/frontend/         @gabrieldanis
# /microservices/chat/             @ismayilguliyev28
# /microservices/cli-client/       @sekula34 @benszilas
# /microservices/monitoring/       @benszilas
# /microservices/pong/             @sekula34
# /microservices/tictactoe/        @ismayilguliyev28
/microservices/users/            @marcorondong

# === Temporary solution to issue with AUTH and NGINX config === #
microservices/nginx/             @marcorondong
microservices/auth_api/src/      @marcorondong

# === Temporary solution to root env pollution and overwriting === #
./.env.enc                       @marcorondong

# === TOOLS === #
/tools/entrypoint.sh             @marcorondong
/tools/fill_db.py                @marcorondong
/tools/show-schema.ts            @marcorondong
/tools/microservices_readme.md   @marcorondong
/tools/db_seeder/                @marcorondong
/tools/db_seeder/seed_data

# === CONFIGURATION & TOOLING === #
/.vscode/                        @marcorondong
/.github/                        @marcorondong
/.prettierrc                     @marcorondong
/.editorconfig                   @marcorondong
/.eslintrc                       @marcorondong
/.gitignore                      @marcorondong
/.prettierignore                 @marcorondong
/.github/CODEOWNERS              @marcorondong

# === DICTIONARIES === #
/.vscode/custom-words.txt
/.vscode/forbidden-words.txt

# === CI/CD Workflows and Actions === #
/.github/workflows/              @marcorondong
/.github/actions/                @marcorondong

# === Protects against unwanted npm installs === #
/package.json                    @marcorondong
/package-lock.json               @marcorondong
# **/package.json                  @marcorondong
# **/package-lock.json             @marcorondong

# === Docker + Deployment infra === #
# /Dockerfile                      @marcorondong
# /docker-compose.yml              @marcorondong
# /infra/docker/                   @marcorondong
# /Makefile                        @marcorondong

# === DOCS & MAINTENANCE FILES === #
/README.md                       @marcorondong
/README_DEV.md                   @marcorondong
/CONTRIBUTING.md                 @marcorondong

# === EXAMPLES OF VALID PATTERNS === #

# Matches any file named ".env" anywhere
# **/.env                          @marcorondong

# Matches all Markdown files anywhere
# **/*.md                          @marcorondong

# Matches all .js files inside frontend/ and subfolders
# /frontend/**/*.js                @marcorondong

# Matches any folder named "logs" at any depth
# **/logs/                         @marcorondong

# Matches specific file inside any subdirectory (not just root)
# /**/env.sample                   @marcorondong

# === GitHub CODEOWNERS Examples === #
# # This is a comment.
# # Each line is a file pattern followed by one or more owners.

# # These owners will be the default owners for everything in
# # the repo. Unless a later match takes precedence,
# # @global-owner1 and @global-owner2 will be requested for
# # review when someone opens a pull request.
# *       @global-owner1 @global-owner2

# # Order is important; the last matching pattern takes the most
# # precedence. When someone opens a pull request that only
# # modifies JS files, only @js-owner and not the global
# # owner(s) will be requested for a review.
# *.js    @js-owner #This is an inline comment.

# # You can also use email addresses if you prefer. They'll be
# # used to look up users just like we do for commit author
# # emails.
# *.go docs@example.com

# # Teams can be specified as code owners as well. Teams should
# # be identified in the format @org/team-name. Teams must have
# # explicit write access to the repository. In this example,
# # the octocats team in the octo-org organization owns all .txt files.
# *.txt @octo-org/octocats

# # In this example, @doctocat owns any files in the build/logs
# # directory at the root of the repository and any of its
# # subdirectories.
# /build/logs/ @doctocat

# # The `docs/*` pattern will match files like
# # `docs/getting-started.md` but not further nested files like
# # `docs/build-app/troubleshooting.md`.
# docs/* docs@example.com

# # In this example, @octocat owns any file in an apps directory
# # anywhere in your repository.
# apps/ @octocat

# # In this example, @doctocat owns any file in the `/docs`
# # directory in the root of your repository and any of its
# # subdirectories.
# /docs/ @doctocat

# # In this example, any change inside the `/scripts` directory
# # will require approval from @doctocat or @octocat.
# /scripts/ @doctocat @octocat

# # In this example, @octocat owns any file in a `/logs` directory such as
# # `/build/logs`, `/scripts/logs`, and `/deeply/nested/logs`. Any changes
# # in a `/logs` directory will require approval from @octocat.
# **/logs @octocat

# # In this example, @octocat owns any file in the `/apps`
# # directory in the root of your repository except for the `/apps/github`
# # subdirectory, as its owners are left empty. Without an owner, changes
# # to `apps/github` can be made with the approval of any user who has
# # write access to the repository.
# /apps/ @octocat
# /apps/github

# # In this example, @octocat owns any file in the `/apps`
# # directory in the root of your repository except for the `/apps/github`
# # subdirectory, as this subdirectory has its own owner @doctocat
# /apps/ @octocat
# /apps/github @doctocat
