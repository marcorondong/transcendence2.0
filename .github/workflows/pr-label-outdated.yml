name: PR Outdated Label

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  schedule:
    - cron: "0 5 * * *" # Every day at 05:00 UTC ## Every 2 hours UTC:"0 */2 * * *" ## Every 5 min UTC: "*/5 * * * *"
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  pull-requests: write

env:
  OUTDATED_LABEL: outdated
  OUTDATED_COMMENT: "⚠️ This PR is out-of-date with the base branch (`main`). Please merge the latest changes from `main` into your branch."
  COMMENT_LOOKBACK_COUNT: 2

jobs:
  # ───────────────────────────────────────────────
  # 🔁 JOB 1: PR-triggered (reacts to PR creation/update)
  # ───────────────────────────────────────────────
  label_on_pr_event:
    if: github.event_name == 'pull_request'
    name: Label outdated PR (on PR activity)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ github.token }}
          fetch-depth: 0

      - name: Check if PR is outdated
        uses: ./.github/actions/check-if-outdated
        id: outdated
        with:
          base: main
          head: ${{ github.event.pull_request.head.sha }}

      - name: Add label if outdated
        if: steps.outdated.outputs.is_outdated == 'true'
        uses: ./.github/actions/add-label-if-missing
        with:
          pr_number: ${{ github.event.pull_request.number }}
          label: ${{ env.OUTDATED_LABEL }}

      - name: Comment about outdated status
        if: steps.outdated.outputs.is_outdated == 'true'
        uses: ./.github/actions/comment-outdated-status
        with:
          pr_number: ${{ github.event.pull_request.number }}
          comment_body: ${{ env.OUTDATED_COMMENT }}
          lookback_count: ${{ env.COMMENT_LOOKBACK_COUNT }}

      - name: Remove outdated label if up-to-date
        if: steps.outdated.outputs.is_outdated == 'false'
        uses: ./.github/actions/remove-label-if-present
        with:
          pr_number: ${{ github.event.pull_request.number }}
          label: ${{ env.OUTDATED_LABEL }}

      - name: Remove outdated comment if up-to-date
        if: steps.outdated.outputs.is_outdated == 'false'
        uses: ./.github/actions/remove-comment-if-present
        with:
          pr_number: ${{ github.event.pull_request.number }}
          comment_body: ${{ env.OUTDATED_COMMENT }}

  # ───────────────────────────────────────────────
  # ⏰ JOB 2: Scheduled (checks open PRs via GitHub API only)
  # ───────────────────────────────────────────────
  collect_open_prs:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    name: Collect Open PRs
    runs-on: ubuntu-latest
    outputs:
      pr_numbers: ${{ steps.set-matrix.outputs.pr_numbers }}
    steps:
      - name: Get open PR numbers targeting main
        id: set-matrix
        uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
          result-encoding: string
          script: |
            const { repo, owner } = context.repo;
            const prs = await github.paginate(github.rest.pulls.list, {
              owner,
              repo,
              state: "open",
              base: "main"
            });

            const prNumbers = prs.map(pr => pr.number);
            console.log("🔢 Open PRs:", prNumbers);
            core.setOutput('pr_numbers', JSON.stringify(prNumbers));

  handle_outdated_matrix:
    if: needs.collect_open_prs.outputs.pr_numbers != '[]'
    name: Handle Outdated PRs (Matrix)
    needs: collect_open_prs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pr_number: ${{ fromJson(needs.collect_open_prs.outputs.pr_numbers) }}

    steps:
      - name: Get PR info
        id: pr_data
        uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
          result-encoding: string
          script: |
            const { repo, owner } = context.repo;
            const pr = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: ${{ matrix.pr_number }},
            });
            return {
              head_sha: pr.data.head.sha,
              head_ref: pr.data.head.ref
            };

      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ github.token }}
          fetch-depth: 0

      - name: Check if PR is outdated
        uses: ./.github/actions/check-if-outdated
        id: outdated
        with:
          base: main
          head: ${{ steps.pr_data.outputs.head_sha }}

      - name: Add label if outdated
        if: steps.outdated.outputs.is_outdated == 'true'
        uses: ./.github/actions/add-label-if-missing
        with:
          pr_number: ${{ matrix.pr_number }}
          label: ${{ env.OUTDATED_LABEL }}

      - name: Comment about outdated status
        if: steps.outdated.outputs.is_outdated == 'true'
        uses: ./.github/actions/comment-outdated-status
        with:
          pr_number: ${{ matrix.pr_number }}
          comment_body: ${{ env.OUTDATED_COMMENT }}
          lookback_count: ${{ env.COMMENT_LOOKBACK_COUNT }}

      - name: Remove label if up-to-date
        if: steps.outdated.outputs.is_outdated == 'false'
        uses: ./.github/actions/remove-label-if-present
        with:
          pr_number: ${{ matrix.pr_number }}
          label: ${{ env.OUTDATED_LABEL }}

      - name: Remove outdated comment if up-to-date
        if: steps.outdated.outputs.is_outdated == 'false'
        uses: ./.github/actions/remove-comment-if-present
        with:
          pr_number: ${{ matrix.pr_number }}
          comment_body: ${{ env.OUTDATED_COMMENT }}
# ───────────────────────────────────────────────
# 🛠 DEBUGGING TIPS
# To enable step debug logs:
# → Go to repo Settings > Actions > Secrets and add:
#    Name: ACTIONS_STEP_DEBUG
#    Value: true
#
# Inside github-script blocks, log debug messages like:
# → core.debug("This is a custom debug message");
# (note: core.debug() only shows up if ACTIONS_STEP_DEBUG is true)
#
# Runner-level debug (less common):
# → Add secret: ACTIONS_RUNNER_DEBUG = true
# ───────────────────────────────────────────────
