##### ------- COMMON STUFF ------- #####

# NODE_ENV
NODE_ENV=development

# HOSTS
HOST=0.0.0.0

# ENV FILE
ENV_FILE=.env

# NETWORK NAME
NETWORK_NAME=Transcendence2.0

# RESTART POLICY
RESTART_POLICY=always

# JWT TOKEN NAME
JWT_TOKEN_NAME=access_token

# FRONTEND PORT
FRONTEND_PORT=443

# AI-BOT NICKNAME AND UUID
BOT_NICKNAME=NovakBotkovic
BOT_UUID=68525eaa-6c7f-4375-b3b8-15c474f1b492

### ------- USERS STUFF ------- ###
USERS_PORT=3000
USERS_IMAGE_NAME=users:V1.0.0
USERS_CONTAINER_NAME=users
USERS_FOLDER=./microservices/users/
USERS_ROOT=../../
USERS_ENV_FILE_PATH=${USERS_ROOT}${ENV_FILE}
USERS_MICRO_SERVICE_NAME=users

# USERS BASE URLS
USERS_BASE_URL_FRONTEND=https://localhost:${FRONTEND_PORT}
USERS_BASE_URL_DOCKER=http://${USERS_CONTAINER_NAME}:${USERS_PORT}

# USERS ENDPOINTS (add more which are missing)
USERS_END_POINT=/api/users/
USERS_REGISTRATION_END_POINT=${USERS_END_POINT}
USERS_LOGIN_END_POINT=${USERS_END_POINT}login

# USERS REQUESTS FROM FRONTEND (add more which are missing)


# USERS REQUESTS FROM DOCKER (add more which are missing)
USERS_REGISTRATION_REQUEST_DOCKER=${USERS_BASE_URL_DOCKER}${USERS_REGISTRATION_END_POINT}
USERS_LOGIN_REQUEST_DOCKER=${USERS_BASE_URL_DOCKER}${USERS_LOGIN_END_POINT}
USERS_REQUEST_DOCKER=${USERS_BASE_URL_DOCKER}${USERS_END_POINT}


### ------- PONG_DB STUFF ------- ###

# PONG_DB DOCKER-COMPOSE.YML STUFF
PONG_DB_PORT=3011
PONG_DB_IMAGE_NAME=pong_db_image
PONG_DB_CONTAINER_NAME=pong_db_container
PONG_DB_FOLDER=./microservices/pong_db/
PONG_DB_ROOT=../../
PONG_DB_BUILD_FOLDER=./
PONG_DB_SRC_FOLDER_CONTAINER=/pong_db/src/
PONG_DB_SRC_FOLDER_LOCAL=./src/
PONG_DB_PRISMA_FOLDER_CONTAINER=/pong_db/prisma/
PONG_DB_PRISMA_FOLDER_LOCAL=./prisma/
PONG_DB_DATABASE_FOLDER_CONTAINER=/pong_db/DB/
PONG_DB_DATABASE_FOLDER_LOCAL=/home/iguliyev/DBs/pong/ # for local development, adjust in production
PONG_DB_ENV_FILE_PATH=${PONG_DB_ROOT}${ENV_FILE}
PONG_DB_MICRO_SERVICE_NAME=pong_db

# POND_DB BASE URLS
PONG_DB_BASE_URL_FRONTEND=https://localhost:${FRONTEND_PORT}
PONG_DB_BASE_URL_DOCKER=http://${PONG_DB_CONTAINER_NAME}:${PONG_DB_PORT}

# PONG_DB ENDPOINTS
PONG_DB_END_POINT=/pong-db
PONG_DB_CREATE_GAME_END_POINT=${PONG_DB_END_POINT}/create-game
PONG_DB_GAME_HISTORY_END_POINT=${PONG_DB_END_POINT}/game-history
PONG_DB_USER_STATS_END_POINT=${PONG_DB_END_POINT}/user-stats
PONG_DB_USERS_STATS_END_POINT=${PONG_DB_END_POINT}/users-stats
PONG_DB_HEAD_TO_HEAD_END_POINT=${PONG_DB_END_POINT}/head-to-head
PONG_DB_HEALTH_CHECK_END_POINT=${PONG_DB_END_POINT}/health-check
PONG_DB_DOCUMENTATION_END_POINT=${PONG_DB_END_POINT}/documentation

# PONG_DB REQUESTS FROM FRONTEND
PONG_DB_CREATE_GAME_REQUEST_FRONTEND=${PONG_DB_BASE_URL_FRONTEND}${PONG_DB_CREATE_GAME_END_POINT}
PONG_DB_GAME_HISTORY_REQUEST_FRONTEND=${PONG_DB_BASE_URL_FRONTEND}${PONG_DB_GAME_HISTORY_END_POINT}
PONG_DB_USER_STATS_REQUEST_FRONTEND=${PONG_DB_BASE_URL_FRONTEND}${PONG_DB_USER_STATS_END_POINT}
PONG_DB_USERS_STATS_REQUEST_FRONTEND=${PONG_DB_BASE_URL_FRONTEND}${PONG_DB_USERS_STATS_END_POINT}
PONG_DB_HEAD_TO_HEAD_REQUEST_FRONTEND=${PONG_DB_BASE_URL_FRONTEND}${PONG_DB_HEAD_TO_HEAD_END_POINT}
PONG_DB_HEALTH_CHECK_REQUEST_FRONTEND=${PONG_DB_BASE_URL_FRONTEND}${PONG_DB_HEALTH_CHECK_END_POINT}

# PONG_DB REQUESTS FROM DOCKER
PONG_DB_CREATE_GAME_REQUEST_DOCKER=${PONG_DB_BASE_URL_DOCKER}${PONG_DB_CREATE_GAME_END_POINT}
PONG_DB_GAME_HISTORY_REQUEST_DOCKER=${PONG_DB_BASE_URL_DOCKER}${PONG_DB_GAME_HISTORY_END_POINT}
PONG_DB_USER_STATS_REQUEST_DOCKER=${PONG_DB_BASE_URL_DOCKER}${PONG_DB_USER_STATS_END_POINT}
PONG_DB_USERS_STATS_REQUEST_DOCKER=${PONG_DB_BASE_URL_DOCKER}${PONG_DB_USERS_STATS_END_POINT}
PONG_DB_HEAD_TO_HEAD_REQUEST_DOCKER=${PONG_DB_BASE_URL_DOCKER}${PONG_DB_HEAD_TO_HEAD_END_POINT}
PONG_DB_HEALTH_CHECK_REQUEST_DOCKER=${PONG_DB_BASE_URL_DOCKER}${PONG_DB_HEALTH_CHECK_END_POINT}

# PONG_DB DATABASE URLS
PONG_DB_DATABASE_URL_LOCAL=file:/home/iguliyev/DBs/pong/pongDB.db # for local development, adjust in production
PONG_DB_DATABASE_URL_CONTAINER=file:/pong_db/DB/pongDB.db

# PONG_DB ENDPOINTS' PARAMS
PONG_DB_GAME_HISTORY_PARAM=/:userId
PONG_DB_USER_STATS_PARAM=/:userId
PONG_DB_HEAD_TO_HEAD_PARAM=/:userId/:opponentId

# PONG_DB ENDPOINTS WITH PARAMS
PONG_DB_CREATE_GAME_STATIC=${PONG_DB_CREATE_GAME_END_POINT}
PONG_DB_GAME_HISTORY_STATIC=${PONG_DB_GAME_HISTORY_END_POINT}${PONG_DB_GAME_HISTORY_PARAM}
PONG_DB_USER_STATS_STATIC=${PONG_DB_USER_STATS_END_POINT}${PONG_DB_USER_STATS_PARAM}
PONG_DB_USERS_STATS_STATIC=${PONG_DB_USERS_STATS_END_POINT}
PONG_DB_HEAD_TO_HEAD_STATIC=${PONG_DB_HEAD_TO_HEAD_END_POINT}${PONG_DB_HEAD_TO_HEAD_PARAM}
PONG_DB_HEALTH_CHECK_STATIC=${PONG_DB_HEALTH_CHECK_END_POINT}
PONG_DB_DOCUMENTATION_STATIC=${PONG_DB_DOCUMENTATION_END_POINT}

### ------- PONG_API STUFF ------- ###

# PONG_API REQUESTS FROM DOCKER (add more which are missing)
PONG_API_PLAYER_ROOM_REQUEST_DOCKER=http://pong-api:3010/pong-api/player-room

### ------- AUTH_API STUFF ------- ###

# AUTH_API DOCKER-COMPOSE.YML STUFF
AUTH_API_PORT=2999
AUTH_API_IMAGE_NAME=auth_api_image
AUTH_API_CONTAINER_NAME=auth_api_container
AUTH_API_FOLDER=./microservices/auth_api/
AUTH_API_ROOT=../../
AUTH_API_BUILD_FOLDER=./
AUTH_API_SRC_FOLDER_CONTAINER=/auth_api/src/
AUTH_API_SRC_FOLDER_LOCAL=./src/
AUTH_API_ENV_FILE_PATH=${AUTH_API_ROOT}${ENV_FILE}
AUTH_API_JWT_SECRET_FILE=jwtSecret.key
AUTH_API_COOKIE_SECRET_FILE=cookieSecret.key
AUTH_API_JWT_SECRET_FILE_LOCATION_LOCAL=./secret_keys/${AUTH_API_JWT_SECRET_FILE}
AUTH_API_JWT_SECRET_FILE_LOCATION_CONTAINER=/run/secrets/${AUTH_API_JWT_SECRET_FILE}
AUTH_API_COOKIE_SECRET_FILE_LOCATION_LOCAL=./secret_keys/${AUTH_API_COOKIE_SECRET_FILE}
AUTH_API_COOKIE_SECRET_FILE_LOCATION_CONTAINER=/run/secrets/${AUTH_API_COOKIE_SECRET_FILE}
AUTH_API_MICRO_SERVICE_NAME=auth_api

# AUTH_API BASE URLS
AUTH_API_BASE_URL_FRONTEND=https://localhost:${FRONTEND_PORT}
AUTH_API_BASE_URL_DOCKER=http://${AUTH_API_CONTAINER_NAME}:${AUTH_API_PORT}

# AUTH_API ENDPOINTS
AUTH_API_END_POINT=/auth-api
AUTH_API_SIGN_IN_END_POINT=${AUTH_API_END_POINT}/sign-in
AUTH_API_SIGN_UP_END_POINT=${AUTH_API_END_POINT}/sign-up
AUTH_API_SIGN_OUT_END_POINT=${AUTH_API_END_POINT}/sign-out
AUTH_API_VERIFY_JWT_END_POINT=${AUTH_API_END_POINT}/verify-jwt
AUTH_API_REFRESH_JWT_END_POINT=${AUTH_API_END_POINT}/refresh-jwt
AUTH_API_VERIFY_CONNECTION_END_POINT=${AUTH_API_END_POINT}/verify-connection
AUTH_API_BOT_JWT_END_POINT=${AUTH_API_END_POINT}/bot-jwt
AUTH_API_UPDATE_JWT_END_POINT=${AUTH_API_END_POINT}/update-jwt
AUTH_API_USERS_END_POINT=${AUTH_API_END_POINT}/users
AUTH_API_HEALTH_CHECK_END_POINT=${AUTH_API_END_POINT}/health-check
AUTH_API_DOCUMENTATION_END_POINT=${AUTH_API_END_POINT}/documentation

# AUTH_API REQUESTS FROM FRONTEND
AUTH_API_SIGN_IN_REQUEST_FRONTEND=${AUTH_API_BASE_URL_FRONTEND}${AUTH_API_SIGN_IN_END_POINT}
AUTH_API_SIGN_UP_REQUEST_FRONTEND=${AUTH_API_BASE_URL_FRONTEND}${AUTH_API_SIGN_UP_END_POINT}
AUTH_API_SIGN_OUT_REQUEST_FRONTEND=${AUTH_API_BASE_URL_FRONTEND}${AUTH_API_SIGN_OUT_END_POINT}
AUTH_API_VERIFY_JWT_REQUEST_FRONTEND=${AUTH_API_BASE_URL_FRONTEND}${AUTH_API_VERIFY_JWT_END_POINT}
AUTH_API_REFRESH_JWT_REQUEST_FRONTEND=${AUTH_API_BASE_URL_FRONTEND}${AUTH_API_REFRESH_JWT_END_POINT}
AUTH_API_VERIFY_CONNECTION_REQUEST_FRONTEND=${AUTH_API_BASE_URL_FRONTEND}${AUTH_API_VERIFY_CONNECTION_END_POINT}
AUTH_API_BOT_JWT_REQUEST_FRONTEND=${AUTH_API_BASE_URL_FRONTEND}${AUTH_API_BOT_JWT_END_POINT}
AUTH_API_UPDATE_JWT_REQUEST_FRONTEND=${AUTH_API_BASE_URL_FRONTEND}${AUTH_API_UPDATE_JWT_END_POINT}
AUTH_API_USERS_REQUEST_FRONTEND=${AUTH_API_BASE_URL_FRONTEND}${AUTH_API_USERS_END_POINT}
AUTH_API_HEALTH_CHECK_REQUEST_FRONTEND=${AUTH_API_BASE_URL_FRONTEND}${AUTH_API_HEALTH_CHECK_END_POINT}

# AUTH_API REQUESTS FROM DOCKER
AUTH_API_SIGN_IN_REQUEST_DOCKER=${AUTH_API_BASE_URL_DOCKER}${AUTH_API_SIGN_IN_END_POINT}
AUTH_API_SIGN_UP_REQUEST_DOCKER=${AUTH_API_BASE_URL_DOCKER}${AUTH_API_SIGN_UP_END_POINT}
AUTH_API_SIGN_OUT_REQUEST_DOCKER=${AUTH_API_BASE_URL_DOCKER}${AUTH_API_SIGN_OUT_END_POINT}
AUTH_API_VERIFY_JWT_REQUEST_DOCKER=${AUTH_API_BASE_URL_DOCKER}${AUTH_API_VERIFY_JWT_END_POINT}
AUTH_API_REFRESH_JWT_REQUEST_DOCKER=${AUTH_API_BASE_URL_DOCKER}${AUTH_API_REFRESH_JWT_END_POINT}
AUTH_API_VERIFY_CONNECTION_REQUEST_DOCKER=${AUTH_API_BASE_URL_DOCKER}${AUTH_API_VERIFY_CONNECTION_END_POINT}
AUTH_API_BOT_JWT_REQUEST_DOCKER=${AUTH_API_BASE_URL_DOCKER}${AUTH_API_BOT_JWT_END_POINT}
AUTH_API_UPDATE_JWT_REQUEST_DOCKER=${AUTH_API_BASE_URL_DOCKER}${AUTH_API_UPDATE_JWT_END_POINT}
AUTH_API_USERS_REQUEST_DOCKER=${AUTH_API_BASE_URL_DOCKER}${AUTH_API_USERS_END_POINT}
AUTH_API_HEALTH_CHECK_REQUEST_DOCKER=${AUTH_API_BASE_URL_DOCKER}${AUTH_API_HEALTH_CHECK_END_POINT}

# AUTH_API ENDPOINTS' PARAMS
AUTH_API_ID_PARAM=/:id

# AUTH_API ENDPOINTS WITH PARAMS
AUTH_API_SIGN_IN_STATIC=${AUTH_API_SIGN_IN_END_POINT}
AUTH_API_SIGN_UP_STATIC=${AUTH_API_SIGN_UP_END_POINT}
AUTH_API_SIGN_OUT_STATIC=${AUTH_API_SIGN_OUT_END_POINT}
AUTH_API_VERIFY_JWT_STATIC=${AUTH_API_VERIFY_JWT_END_POINT}
AUTH_API_REFRESH_JWT_STATIC=${AUTH_API_REFRESH_JWT_END_POINT}
AUTH_API_VERIFY_CONNECTION_STATIC=${AUTH_API_VERIFY_CONNECTION_END_POINT}
AUTH_API_BOT_JWT_STATIC=${AUTH_API_BOT_JWT_END_POINT}
AUTH_API_UPDATE_JWT_STATIC=${AUTH_API_UPDATE_JWT_END_POINT}
AUTH_API_USERS_STATIC=${AUTH_API_USERS_END_POINT}${AUTH_API_ID_PARAM}
AUTH_API_HEALTH_CHECK_STATIC=${AUTH_API_HEALTH_CHECK_END_POINT}
AUTH_API_DOCUMENTATION_STATIC=${AUTH_API_DOCUMENTATION_END_POINT}

### ------- CHAT_DB STUFF ------- ###

# CHAT_DB DOCKER-COMPOSE.YML STUFF
CHAT_DB_PORT=3004
CHAT_DB_IMAGE_NAME=chat_db_image
CHAT_DB_CONTAINER_NAME=chat_db_container
CHAT_DB_FOLDER=./microservices/chat_db/
CHAT_DB_ROOT=../../
CHAT_DB_BUILD_FOLDER=./
CHAT_DB_SRC_FOLDER_CONTAINER=/chat_db/src/
CHAT_DB_SRC_FOLDER_LOCAL=./src/
CHAT_DB_PRISMA_FOLDER_CONTAINER=/chat_db/prisma/
CHAT_DB_PRISMA_FOLDER_LOCAL=./prisma/
CHAT_DB_DATABASE_FOLDER_CONTAINER=/chat_db/DB/
CHAT_DB_DATABASE_FOLDER_LOCAL=/home/iguliyev/DBs/chat/ # for local development, adjust in production
CHAT_DB_ENV_FILE_PATH=${CHAT_DB_ROOT}${ENV_FILE}
CHAT_DB_MICRO_SERVICE_NAME=chat_db

# CHAT_DB BASE URLS
CHAT_DB_BASE_URL_FRONTEND=https://localhost:${FRONTEND_PORT}
CHAT_DB_BASE_URL_DOCKER=http://${CHAT_DB_CONTAINER_NAME}:${CHAT_DB_PORT}

# CHAT_DB ENDPOINTS
CHAT_DB_END_POINT=/chat-db
CHAT_DB_CREATE_USER_END_POINT=${CHAT_DB_END_POINT}/create-user
CHAT_DB_BLOCK_USER_END_POINT=${CHAT_DB_END_POINT}/block-user
CHAT_DB_UNBLOCK_USER_END_POINT=${CHAT_DB_END_POINT}/unblock-user
CHAT_DB_TOGGLE_BLOCK_END_POINT=${CHAT_DB_END_POINT}/toggle-block
CHAT_DB_BLOCK_STATUS_END_POINT=${CHAT_DB_END_POINT}/block-status
CHAT_DB_BLOCK_LIST_END_POINT=${CHAT_DB_END_POINT}/block-list
CHAT_DB_HEALTH_CHECK_END_POINT=${CHAT_DB_END_POINT}/health-check
CHAT_DB_DOCUMENTATION_END_POINT=${CHAT_DB_END_POINT}/documentation

# CHAT_DB REQUESTS FROM FRONTEND
CHAT_DB_CREATE_USER_REQUEST_FRONTEND=${CHAT_DB_BASE_URL_FRONTEND}${CHAT_DB_CREATE_USER_END_POINT}
CHAT_DB_BLOCK_USER_REQUEST_FRONTEND=${CHAT_DB_BASE_URL_FRONTEND}${CHAT_DB_BLOCK_USER_END_POINT}
CHAT_DB_UNBLOCK_USER_REQUEST_FRONTEND=${CHAT_DB_BASE_URL_FRONTEND}${CHAT_DB_UNBLOCK_USER_END_POINT}
CHAT_DB_TOGGLE_BLOCK_REQUEST_FRONTEND=${CHAT_DB_BASE_URL_FRONTEND}${CHAT_DB_TOGGLE_BLOCK_END_POINT}
CHAT_DB_BLOCK_STATUS_REQUEST_FRONTEND=${CHAT_DB_BASE_URL_FRONTEND}${CHAT_DB_BLOCK_STATUS_END_POINT}
CHAT_DB_BLOCK_LIST_REQUEST_FRONTEND=${CHAT_DB_BASE_URL_FRONTEND}${CHAT_DB_BLOCK_LIST_END_POINT}
CHAT_DB_HEALTH_CHECK_REQUEST_FRONTEND=${CHAT_DB_BASE_URL_FRONTEND}${CHAT_DB_HEALTH_CHECK_END_POINT}

# CHAT_DB REQUESTS FROM DOCKER
CHAT_DB_CREATE_USER_REQUEST_DOCKER=${CHAT_DB_BASE_URL_DOCKER}${CHAT_DB_CREATE_USER_END_POINT}
CHAT_DB_BLOCK_USER_REQUEST_DOCKER=${CHAT_DB_BASE_URL_DOCKER}${CHAT_DB_BLOCK_USER_END_POINT}
CHAT_DB_UNBLOCK_USER_REQUEST_DOCKER=${CHAT_DB_BASE_URL_DOCKER}${CHAT_DB_UNBLOCK_USER_END_POINT}
CHAT_DB_TOGGLE_BLOCK_REQUEST_DOCKER=${CHAT_DB_BASE_URL_DOCKER}${CHAT_DB_TOGGLE_BLOCK_END_POINT}
CHAT_DB_BLOCK_STATUS_REQUEST_DOCKER=${CHAT_DB_BASE_URL_DOCKER}${CHAT_DB_BLOCK_STATUS_END_POINT}
CHAT_DB_BLOCK_LIST_REQUEST_DOCKER=${CHAT_DB_BASE_URL_DOCKER}${CHAT_DB_BLOCK_LIST_END_POINT}
CHAT_DB_HEALTH_CHECK_REQUEST_DOCKER=${CHAT_DB_BASE_URL_DOCKER}${CHAT_DB_HEALTH_CHECK_END_POINT}

# CHAT_DB DATABASE URLS
CHAT_DB_DATABASE_URL_LOCAL=file:/home/iguliyev/DBs/chat/chatDB.db # for local development, adjust in production
CHAT_DB_DATABASE_URL_CONTAINER=file:/chat_db/DB/chatDB.db

# CHAT_DB ENDPOINTS' PARAMS
CHAT_DB_BLOCK_STATUS_PARAM=/:userId/:friendId
CHAT_DB_BLOCK_LIST_PARAM=/:userId

# CHAT_DB ENDPOINTS WITH PARAMS
CHAT_DB_CREATE_USER_STATIC=${CHAT_DB_CREATE_USER_END_POINT}
CHAT_DB_BLOCK_USER_STATIC=${CHAT_DB_BLOCK_USER_END_POINT}
CHAT_DB_UNBLOCK_USER_STATIC=${CHAT_DB_UNBLOCK_USER_END_POINT}
CHAT_DB_TOGGLE_BLOCK_STATIC=${CHAT_DB_TOGGLE_BLOCK_END_POINT}
CHAT_DB_BLOCK_STATUS_STATIC=${CHAT_DB_BLOCK_STATUS_END_POINT}${CHAT_DB_BLOCK_STATUS_PARAM}
CHAT_DB_BLOCK_LIST_STATIC=${CHAT_DB_BLOCK_LIST_END_POINT}${CHAT_DB_BLOCK_LIST_PARAM}
CHAT_DB_HEALTH_CHECK_STATIC=${CHAT_DB_HEALTH_CHECK_END_POINT}
CHAT_DB_DOCUMENTATION_STATIC=${CHAT_DB_DOCUMENTATION_END_POINT}

### ------- CHAT_API STUFF ------- ###

# CHAT_API DOCKER-COMPOSE.YML STUFF
CHAT_API_PORT=3002
CHAT_API_IMAGE_NAME=chat_api_image
CHAT_API_CONTAINER_NAME=chat_api_container
CHAT_API_FOLDER=./microservices/chat_api/
CHAT_API_ROOT=../../
CHAT_API_BUILD_FOLDER=./
CHAT_API_SRC_FOLDER_CONTAINER=/chat_api/src/
CHAT_API_SRC_FOLDER_LOCAL=./src/
CHAT_API_ENV_FILE_PATH=${CHAT_API_ROOT}${ENV_FILE}
CHAT_API_MICRO_SERVICE_NAME=chat_api

# CHAT_API BASE URLS
CHAT_API_BASE_URL_FRONTEND=ws://localhost:${CHAT_API_PORT}

# CHAT_API ENDPOINTS
CHAT_API_END_POINT=/chat-api
CHAT_API_HEALTH_CHECK_END_POINT=${CHAT_API_END_POINT}/health-check
CHAT_API_CONNECTION_END_POINT=${CHAT_API_END_POINT}

# CHAT_API REQUESTS FROM FRONTEND
CHAT_API_HEALTH_CHECK_REQUEST_FRONTEND=${CHAT_API_BASE_URL_FRONTEND}${CHAT_API_HEALTH_CHECK_END_POINT}

# CHAT_API CONNECTION URL
CHAT_API_CONNECTION_URL=${CHAT_API_BASE_URL_FRONTEND}${CHAT_API_CONNECTION_END_POINT}

# CHAT_API STATIC
CHAT_API_CONNECTION_STATIC=${CHAT_API_CONNECTION_END_POINT}
CHAT_API_HEALTH_CHECK_STATIC=${CHAT_API_HEALTH_CHECK_END_POINT}

### ------- TICTACTOE_DB STUFF ------- ###

# TICTACTOE_DB DOCKER-COMPOSE.YML STUFF
TICTACTOE_DB_PORT=3003
TICTACTOE_DB_IMAGE_NAME=tictactoe_db_image
TICTACTOE_DB_CONTAINER_NAME=tictactoe_db_container
TICTACTOE_DB_FOLDER=./microservices/tictactoe_db/
TICTACTOE_DB_ROOT=../../
TICTACTOE_DB_BUILD_FOLDER=./
TICTACTOE_DB_SRC_FOLDER_CONTAINER=/tictactoe_db/src/
TICTACTOE_DB_SRC_FOLDER_LOCAL=./src/
TICTACTOE_DB_PRISMA_FOLDER_CONTAINER=/tictactoe_db/prisma/
TICTACTOE_DB_PRISMA_FOLDER_LOCAL=./prisma/
TICTACTOE_DB_DATABASE_FOLDER_CONTAINER=/tictactoe_db/DB/
TICTACTOE_DB_DATABASE_FOLDER_LOCAL=/home/iguliyev/DBs/tictactoe/ # for local development, adjust in production
TICTACTOE_DB_ENV_FILE_PATH=${TICTACTOE_DB_ROOT}${ENV_FILE}
TICTACTOE_DB_MICRO_SERVICE_NAME=tictactoe_db

# TICTACTOE_DB BASE URLS
TICTACTOE_DB_BASE_URL_FRONTEND=https://localhost:${FRONTEND_PORT}
TICTACTOE_DB_BASE_URL_DOCKER=http://${TICTACTOE_DB_CONTAINER_NAME}:${TICTACTOE_DB_PORT}

# TICTACTOE_DB ENDPOINTS
TICTACTOE_DB_END_POINT=/tictactoe-db
TICTACTOE_DB_CREATE_GAME_END_POINT=${TICTACTOE_DB_END_POINT}/create-game
TICTACTOE_DB_GAME_HISTORY_END_POINT=${TICTACTOE_DB_END_POINT}/game-history
TICTACTOE_DB_TOTAL_STATS_END_POINT=${TICTACTOE_DB_END_POINT}/total-stats
TICTACTOE_DB_HEAD_TO_HEAD_END_POINT=${TICTACTOE_DB_END_POINT}/head-to-head
TICTACTOE_DB_HEALTH_CHECK_END_POINT=${TICTACTOE_DB_END_POINT}/health-check
TICTACTOE_DB_DOCUMENTATION_END_POINT=${TICTACTOE_DB_END_POINT}/documentation

# TICTACTOE_DB REQUESTS FROM FRONTEND
TICTACTOE_DB_CREATE_GAME_REQUEST_FRONTEND=${TICTACTOE_DB_BASE_URL_FRONTEND}${TICTACTOE_DB_CREATE_GAME_END_POINT}
TICTACTOE_DB_GAME_HISTORY_REQUEST_FRONTEND=${TICTACTOE_DB_BASE_URL_FRONTEND}${TICTACTOE_DB_GAME_HISTORY_END_POINT}
TICTACTOE_DB_TOTAL_STATS_REQUEST_FRONTEND=${TICTACTOE_DB_BASE_URL_FRONTEND}${TICTACTOE_DB_TOTAL_STATS_END_POINT}
TICTACTOE_DB_HEAD_TO_HEAD_REQUEST_FRONTEND=${TICTACTOE_DB_BASE_URL_FRONTEND}${TICTACTOE_DB_HEAD_TO_HEAD_END_POINT}
TICTACTOE_DB_HEALTH_CHECK_REQUEST_FRONTEND=${TICTACTOE_DB_BASE_URL_FRONTEND}${TICTACTOE_DB_HEALTH_CHECK_END_POINT}

# TICTACTOE_DB REQUESTS FROM DOCKER
TICTACTOE_DB_CREATE_GAME_REQUEST_DOCKER=${TICTACTOE_DB_BASE_URL_DOCKER}${TICTACTOE_DB_CREATE_GAME_END_POINT}
TICTACTOE_DB_GAME_HISTORY_REQUEST_DOCKER=${TICTACTOE_DB_BASE_URL_DOCKER}${TICTACTOE_DB_GAME_HISTORY_END_POINT}
TICTACTOE_DB_TOTAL_STATS_REQUEST_DOCKER=${TICTACTOE_DB_BASE_URL_DOCKER}${TICTACTOE_DB_TOTAL_STATS_END_POINT}
TICTACTOE_DB_HEAD_TO_HEAD_REQUEST_DOCKER=${TICTACTOE_DB_BASE_URL_DOCKER}${TICTACTOE_DB_HEAD_TO_HEAD_END_POINT}
TICTACTOE_DB_HEALTH_CHECK_REQUEST_DOCKER=${TICTACTOE_DB_BASE_URL_DOCKER}${TICTACTOE_DB_HEALTH_CHECK_END_POINT}

# TICTACTOE_DB DATABASE URLS
TICTACTOE_DB_DATABASE_URL_LOCAL=file:/home/iguliyev/DBs/tictactoe/tictactoeDB.db # for local development, adjust in production
TICTACTOE_DB_DATABASE_URL_CONTAINER=file:/tictactoe_db/DB/tictactoeDB.db

# TICTACTOE_DB ENDPOINTS' PARAMS
TICTACTOE_DB_GAME_HISTORY_PARAM=/:userId
TICTACTOE_DB_TOTAL_STATS_PARAM=/:userId
TICTACTOE_DB_HEAD_TO_HEAD_PARAM=/:userId/:opponentId

# TICTACTOE_DB ENDPOINTS WITH PARAMS
TICTACTOE_DB_CREATE_GAME_STATIC=${TICTACTOE_DB_CREATE_GAME_END_POINT}
TICTACTOE_DB_GAME_HISTORY_STATIC=${TICTACTOE_DB_GAME_HISTORY_END_POINT}${TICTACTOE_DB_GAME_HISTORY_PARAM}
TICTACTOE_DB_TOTAL_STATS_STATIC=${TICTACTOE_DB_TOTAL_STATS_END_POINT}${TICTACTOE_DB_TOTAL_STATS_PARAM}
TICTACTOE_DB_HEAD_TO_HEAD_STATIC=${TICTACTOE_DB_HEAD_TO_HEAD_END_POINT}${TICTACTOE_DB_HEAD_TO_HEAD_PARAM}
TICTACTOE_DB_HEALTH_CHECK_STATIC=${TICTACTOE_DB_HEALTH_CHECK_END_POINT}
TICTACTOE_DB_DOCUMENTATION_STATIC=${TICTACTOE_DB_DOCUMENTATION_END_POINT}

### ------- TICTACTOE_API STUFF ------- ###

# TICTACTOE_API DOCKER-COMPOSE.YML STUFF
TICTACTOE_API_PORT=3001
TICTACTOE_API_IMAGE_NAME=tictactoe_api_image
TICTACTOE_API_CONTAINER_NAME=tictactoe_api_container
TICTACTOE_API_FOLDER=./microservices/tictactoe_api/
TICTACTOE_API_ROOT=../../
TICTACTOE_API_BUILD_FOLDER=./
TICTACTOE_API_SRC_FOLDER_CONTAINER=/tictactoe_api/src/
TICTACTOE_API_SRC_FOLDER_LOCAL=./src/
TICTACTOE_API_ENV_FILE_PATH=${TICTACTOE_API_ROOT}${ENV_FILE}
TICTACTOE_API_MICRO_SERVICE_NAME=tictactoe_api

# TICTACTOE_API BASE URLS
TICTACTOE_API_BASE_URL_FRONTEND=https://localhost:${FRONTEND_PORT}
TICTACTOE_API_BASE_URL_DOCKER=http://${TICTACTOE_API_CONTAINER_NAME}:${TICTACTOE_API_PORT}

# TICTACTOE_API ENDPOINTS
TICTACTOE_API_END_POINT=/tictactoe-api
TICTACTOE_API_HEALTH_CHECK_END_POINT=${TICTACTOE_API_END_POINT}/health-check
TICTACTOE_API_CONNECTION_END_POINT=${TICTACTOE_API_END_POINT}

# TICTACTOE_API REQUESTS FROM FRONTEND
TICTACTOE_API_HEALTH_CHECK_REQUEST_FRONTEND=${TICTACTOE_API_BASE_URL_FRONTEND}${TICTACTOE_API_HEALTH_CHECK_END_POINT}

# TICTACTOE_API REQUESTS FROM DOCKER
TICTACTOE_API_HEALTH_CHECK_REQUEST_DOCKER=${TICTACTOE_API_BASE_URL_DOCKER}${TICTACTOE_API_HEALTH_CHECK_END_POINT}

# TICTACTOE_API CONNECTION URL
TICTACTOE_API_CONNECTION_URL=${TICTACTOE_API_BASE_URL_FRONTEND}${TICTACTOE_API_CONNECTION_END_POINT}

# TICTACTOE_API STATIC
TICTACTOE_API_CONNECTION_STATIC=${TICTACTOE_API_CONNECTION_END_POINT}
TICTACTOE_API_HEALTH_CHECK_STATIC=${TICTACTOE_API_HEALTH_CHECK_END_POINT}
