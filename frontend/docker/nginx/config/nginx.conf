user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

# TODO remove comments or leave them but remove this line than
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

	map $http_upgrade $connection_upgrade {
	    default upgrade;
	    '' close;
	}

	upstream websocket {
	    server pong-api:3010;
	}

	upstream chat_websocket {
	    server chat_api_container:3002;
	}

server {

    # listen       80;
    # listen  [::]:80;
    # server_name  localhost;


	listen 443 ssl;
	listen [::]:443 ssl;
    server_name  localhost;


	ssl_protocols TLSv1.3;
	ssl_certificate /etc/nginx/cert.pem;
	ssl_certificate_key /etc/nginx/key.pem;

	location /ai-api {
		auth_request /auth;
		auth_request_set $auth_status $upstream_status;
		error_page 401 = @error401;
		
		proxy_pass http://ai-bot:6969/ai-api;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

	location /grafana/ {
		proxy_pass http://grafana:3000/;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

    location /ws {
        proxy_pass http://chat_websocket;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
	}

    location /pong-api/pong {
        proxy_pass http://websocket;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
	}

	location /auth-api/sign-in {
		proxy_pass http://auth_api_container:2999/auth-api/sign-in;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_connect_timeout 10s;
		proxy_send_timeout 10s;
		proxy_read_timeout 10s;
	}

	location /auth-api/sign-out {
		proxy_pass http://auth_api_container:2999/auth-api/sign-out;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_connect_timeout 10s;
		proxy_send_timeout 10s;
		proxy_read_timeout 10s;
	}

	location /auth-api/verify-jwt {
		proxy_pass http://auth_api_container:2999/auth-api/verify-jwt;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_connect_timeout 10s;
		proxy_send_timeout 10s;
		proxy_read_timeout 10s;
	}

	location /api/users/ {

		# auth_request /auth;
		# auth_request_set $auth_status $upstream_status;
		proxy_pass http://users:3000/api/users/;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_connect_timeout 10s;
		proxy_send_timeout 10s;
		proxy_read_timeout 10s;
	}

	location /api/health-check {
		auth_request /auth;
		auth_request_set $auth_status $upstream_status;
		error_page 401 = @error401;
		proxy_pass http://users:3000/api/healthcheck;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_connect_timeout 10s;
		proxy_send_timeout 10s;
		proxy_read_timeout 10s;
	}

	location = /auth {
		internal;
		proxy_pass http://auth_api_container:2999/auth-api/verify-jwt;
		proxy_pass_request_body  off;
		proxy_set_header        Content-Length "";
		proxy_set_header        X-Original-URI $request_uri;
	}

	location @error401 {
		return 401;
	}

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
		try_files $uri $uri/ /index.html;
    }

}
}
