services:
  pong-api:
    image: pong-api-img
    container_name: pong-api
    build:
      context: ./ssg/pong-api
      dockerfile: Dockerfile
    volumes:
      - ./ssg/pong-api/src/:/pong/pong-api/src/
    ports:
      - 3010:3010 #TODO remove it will not be exposed at final version
    environment:
      - NODE_ENV=production
    command: ["npm", "--prefix", "/pong/pong-api/", "run", "dev"]
    networks:
      - Transcendence2.0

  pong_db:
    image: pong_db_image
    container_name: pong_db_container
    build: ./microservices/pong_db
    environment:
      # - pass env variables from .env file
      - DATABASE_URL=file:/pong_db/DB/pongDB.db
      - NODE_ENV=development
      - PORT=3011
      - HOST=0.0.0.0
    volumes:
      - ./microservices/pong_db/src/:/pong_db/src/ #TODO remove in production
      - ./microservices/pong_db/prisma/:/pong_db/prisma/ #TODO remove in production
      # - /home/iguliyev/DBs/pong/:/pong_db/DB/ #TODO adjust local path and uncomment in production
    ports:
      - 3011:3011 #TODO remove it in production
    networks:
      - Transcendence2.0
    restart: always

  ai-bot:
    build:
      context: ./ssg
      dockerfile: ./AI/Dockerfile
    container_name: ai-bot
    environment:
      - NODE_ENV=production
    ports:
      - 6969:6969 #TODO keep now for swagger documentation, remove later
    networks:
      - Transcendence2.0

  frontend:
    build:
      context: ./frontend
      dockerfile: docker/nginx/Dockerfile-Nginx
    container_name: frontend
    # image: nginx:1.26.2
    volumes:
      - ./frontend/volume:/usr/share/nginx/html
      - ./frontend/docker/nginx/config/nginx.conf:/etc/nginx/nginx.conf
      # - ./src/frontend/docker/certificate/localhost.key:/etc/nginx/localhost.key
      # - ./src/frontend/docker/certificate/localhost.crt:/etc/nginx/localhost.crt
    ports:
      - "8080:443"
    restart: unless-stopped
    networks:
      - Transcendence2.0

  chat_api:
    image: chat_api_img
    container_name: chat_api_container
    build:
      context: ./chat_api
      dockerfile: Dockerfile
    volumes:
      - ./chat_api/src:/chat_api/src
    environment:
      - NODE_ENV=production
      - PORT=3002
      - HOST=0.0.0.0
    ports:
      - "3002:3002"
    networks:
      - Transcendence2.0
    depends_on:
    - chat_db
    restart: always

  chat_db:
    image: chat_db_image
    container_name: chat_db_container
    build:
      context: ./chat_db
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=file:/chat_db/DB/chatDB.db
      - NODE_ENV=development
      - PORT=3004
      - HOST=0.0.0.0
    volumes:
      - ./chat_db/src/:/chat_db/src/
      - ./chat_db/prisma/:/chat_db/prisma/
      # - /home/iguliyev/DBs/chat/:/chat_db/DB/ # TODO uncomment this line when using the local DB
    ports:
      - 3004:3004
    networks:
      - Transcendence2.0
    restart: always

include:
  - ./monitoring/monitoring-docker-compose.yml

networks:
  Transcendence2.0: